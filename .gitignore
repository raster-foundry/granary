# Sass Cache
.sass-cache

# css map
.css.map

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]

# C extensions
*.so

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.cache
nosetests.xml
coverage.xml

# Translations
*.mo
*.pot

# Django stuff:
*.log

# NodeJS / Browserify stuff
node_modules/
npm-debug.log

# Emacs
\#*#
*~
.#*
TAGS

# Vim
.*.swp

# MacOS
.DS_Store

# Scala
*.class
*.log

# sbt specific
.cache
.coursier-cache
.history
.lib/
dist/*
target/
lib_managed/
src_managed/
boot/
plugins/project/
project/.sbtboot
project/.boot/
project/.ivy/
.sbtopts

# Molecule
.molecule/
*__pycache__*

# Scala-IDE specific
.scala_dependencies
.worksheet
.ensime/*
.ensime
.metals/*
.metals
/.ivy2/*
.sbt/
metals.lock.db
.metals/
.bloop/
metals.sbt

/.env
/.envrc

.node_modules
dist/
.vscode

/data
.idea
.ensime_cache
/data

.vscode

# Patch files
*.patch
scratch/

stats.json

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars
*tfvars*

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*
*tfplan*

# generated ghpages files
granary-gh-pages
website/build/index.html
