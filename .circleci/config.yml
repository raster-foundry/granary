version: 2.0
jobs:
  build:
    # CircleCI does not run workflows for tags unless you explicitly specify tag filters
    filters:
      tags:
        only:
          - /^(.*)$/

    docker:
      - image: circleci/openjdk:11-jdk

    steps:
      - checkout

      # https://circleci.com/docs/2.0/building-docker-images/
      - setup_remote_docker:
          docker_layer_caching: true

      - restore_cache:
          keys:
            - sbt-cache-{{ checksum "app-backend/project/Dependencies.scala" }}

      - run:
          command: sbt test:compile
          working_directory: ~/project/app-backend

      - save_cache:
          paths:
            - ~/.ivy2/cache
            - ~/.sbt
            - ~/.cache/coursier
          key: sbt-cache-{{ checksum "app-backend/project/Dependencies.scala" }}

      - run:
          command: ./scripts/cibuild

      - run: |
          if [[ ! "${CIRCLE_BRANCH}" =~ ^develop$|^release/.*$|^hotfix/.*$|^feature/jrb/ci$ ]]; then
              circleci-agent step halt
          fi
          ./scripts/cipublish

      - run: exit 1

      - run:
          command: |
            slackMessage=":jenkins-angry: *Granary (${CIRCLE_BRANCH}) \#${CIRCLE_BUILD_NUM}*"
            if [[ -v CIRCLE_PULL_REQUEST ]]; then
              pr_title="$(curl -s https://api.github.com/repos/raster-foundry/granary/pulls/${CIRCLE_PR_NUMBER} | jq .title)"
              slackMessage+="\n${pr_title} - ${CIRCLE_PR_USERNAME}"
            fi
            slackMessage+="\n<${CIRCLE_BUILD_URL}|View Build>"
            curl -X POST \
              --data-urlencode "payload={\"attachments\":[{\"color\":\"danger\",\"fields\":[{\"value\":\"${slackMessage}\", \"short\":false}]}]}" \
              "${SLACK_WEBHOOK_URL}"
          when: on_fail
